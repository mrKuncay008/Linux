## Membuat Folder Git

 Step 1: Buka github dan buat new repo
 Step 2: Buat Folder / masuk ke folder yang ingin di uplod
 Step 3: Masukan "git remote add origin [URL]/Linux.git"
 Step 4: "git commit -m "Massage" "
 Step 5: lalu "git push -u origin master"

 Tips:
 	git remote -v : untuk melihat url remote
 	git remote set-url origin [URL baru]: Untuk mengganti url remote
 	git branch -M [BRANCh]: Untuk mengganti / memakai branch

## remote dengan ssh:

- Buka file ssh contoh: ~/.ssh
- buat file dengan nama config yang isi nya:
	Host example.com
- ForwardAgent yes
- buka github dan atur SSH KEY masukan code ssh.pub ke dalam git hub
- lalu git remote set-url (ssh)
https://dev.to/alfianandinugraha/menggunakan-ssh-untuk-remote-github-462

## Menambah atau menimpa repo ke folder baru: 

- git init, ke folder yang ingin di timpa
- git remote add origin git@github.com:mrKuncay008/Java.git (url)
- git pull origin master
- git config pull.rebase true
- git pull origin master
- git rebase --continue
- git pull origin master

## Melihat atau mentrack projek yang di ubah :
- git log
- git show / git show <id-commit>

# Git Reset
- git reset soft = mengmbalikan sebelmnya tapi perubahan nya masih tersimpan
- git reset hard = Mengemabalikan sebelumnya perubahanya di hapus
- git reset = mengambalaikan sebalumnya perubahan nya untrack

# Git Workflow
 - Working Dir = Folder isi project
 - Staging area = Menambahkan Project ke staging area git 
 - Local Repo = Direkam nya project di staging area

## Tips Commit Massage
- commit "[FEATURE]" = Commit unuk baru.
- commit "[IMPROVE]" = Commit untuk dikembangkan.
- commit "[FIX]" = Meng fix project.
- commit "[MERGE]" = untuk menimpa perubahan Project

## Rules Development Branch
- main/master  = inti dari project master nya
- Development = Biasa hak askses hanya di pegang Project leader/PM untuk di koreksi sebelum
                di uplod ke master.
- FEATURE A, B = Ini adalah Branch untuk di buat oleh Developer

## Git Satsh
- git stash save "Massage" = Ini untk menyimpan project sebelum di pull dari branch lain
- git pull origin [branch name] = ini untuk menimpa dari brach yang akan dibuat
- git stash list = Untuk melihat Line project yg di simpang di stash.
- git stash apply stash@ {0} = Ini untuk menimpa atau mengganti line yang di buat

## Alur Collabration Git
Setiap Project memliki 3 alur branch yaitu Master->Development->Fiture dalam satu project.
Seluruh Fiture akan di 'marge' ke Development sebelum di uploud ke master.
Proses 'Marge' bisa langsung di github atau di Local, dan setiap marge akan ada konflict
